#!/usr/bin/env python

"""Compute a binary file of likelihoods.
Likelihoods are computed for each hidden state for each position.
The input is a text file that specifies the emission distributions,
and a text file with an observation on each line.
Each observation should be four numbers: a reference base count
and three non-reference base counts.
"""

import struct
import math

import argparse

from drosophiline import ModelA


def main(args):
    """Run the script.
    @param args: command line arguments
    """
    # read the emission distribution parameters
    model = ModelA.Model()
    with open(args.fmodel) as fin:
        model.from_lines(fin)
    # process the observations
    with open(args.flikelihoods, 'wb') as fout:
        with open(args.fobservations) as fin:
            for obs in ModelA.gen_observations(fin):
                for state in model.states:
                    likelihood = state.get_likelihood(obs)
                    if math.isnan(likelihood):
                        raise RuntimeError('likelihood is nan')
                    fout.write(struct.pack('d', likelihood))

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--fmodel', default='model.txt',
            help='this text file specifies the emission distributions')
    parser.add_argument('--fobservations', default='observations.txt',
            help='each line is an observation')
    parser.add_argument('--flikelihoods', default='likelihoods.bin',
            help='this will be a binary file of likelihoods')
    main(parser.parse_args())
